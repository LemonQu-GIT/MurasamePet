（写给开发者看的：如果你为该项目进行了其它平台的适配，可以在此处进行修改，然后把此文件和已有的un_project.py喂给ai，让ai生成新的启动脚本）
我现在需要为这个项目编写一个一键运行项目（还包括了第一次运行的配置环境）的跨平台python脚本，不可依赖第三方库，其中包含以下几个步骤，你在编写脚本的时候可以读取一些文件，来获得更好的效果，同时对于提示内容，你可以酌情修改，以便获得更好的人机体验，同时一些步骤的执行可以不严格按照流程图来我只是为了自己的逻辑方便，你可以进行变通，对于需要在命令行执行的命令，你可以去申请需要的权限（如sudo）python和pip命令在当前版本已改名为python3和pip3，同时在uv正确配置的情况下使用uv run xxx.py代替python3 xxx.py，最后，为了方便开发人员debug，请做到每一步执行都要有痕迹，即日志输出，对于我明确提示输出什么内容的，按照我输出的做，对于我没有提示的，你可以酌情添加提示，但要确保用户也能读懂，以及告诉用户如果有自己解决不了的疑问让用户在github上提issus：
1.检测当前的环境，若满足以下任意一条条件则跳过第2大条检测设备中的2，3项：
    1.config.json中设置了openrouter_api_key且endpoints中murasame字段的值不指向本机ip(即fe80 / 127.x.x.x / localhost)
    2.config.json中虽未设置openrouter_api_key但endpoints中所有字段的值均不指向本机ip(即fe80 / 127.x.x.x / localhost)
2.对于第1大条满足的，按如下描述处理：
    1.提示根据配置，该项目所有模型运行在云端
  否则：
    1.提示根据配置，该项目模型运行在本地，请注意内存消耗
3.检测设备，其中包括系统（主要分辨windows和macOS）和设备的基本信息（如处理器和内存，windows设备还需要额外检测显卡）,输出设备及系统消息，同时若系统类型满足以下几种描述，就给予提示并结束脚本：
    1.使用intel CPU的macOS设备，原因为MLX框架和pytorch框架均不兼容，无法运行ai模型
    2.使用Linux系统的设备，原因为未对该平台进行适配，同时增加一些提示，大致意思为如果你是开发者并有兴趣进行适配，可fork该仓库并提交PR,可向270598250@qq.com邮箱发送邮件以获得具体的要求和技术支持
    3.使用windows系统但非NVIDIA显卡的设备，因为GPT-SoVITS模型不支持CUDA外的其它加速方式
4.若脚本在第三步未被结束，在此步检测是否需要配置环境，若所有条件都满足，则不需要配置，执行第6大条，若有条件不满足，则执行第5大条，以下是需要检测的条件：
    1.对于macOS，是否安装了ARM架构的Homebrew?
    2.对于Windows设备：是否安装了CUDA?
    3.是否有安装uv（不可是pip安装的uv）？
    4.python版本是否>=3.10?
    5.download.py是否已经执行？
    6.gpt_sovits/install.sh是否已经执行？（windows则为gpt_sovits/install.ps1）
    (对于是否已经执行，你可以去读取这两个脚本并自己选择指标进行判断)
5.若被跳转到此步，则说明环境存在问题，需要配置，根据如下描述进行处理
    1.若因4.1导致跳转的，执行/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"以安装homebrew，同时执行echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile添加到环境变量（如有误你可进行修改，这是我查来的，时效性可能存在问题）
    2.若因4.2导致跳转的，直接结束进程并提示用户安装CUDA,可让用户参考此网站的教程：https://www.cnblogs.com/AirCL/p/16963463.html
    3.若因4.3/4.4导致跳转的，按以下提示操作：
        windows:直接结束进程并告诉用户问题和安装方式
        macOS：使用homebrew安装uv和python（安装python前需要先使用brew安装mecab）,同时在用户知情且同意的情况下使用pip3 uninstall uv命令卸载pip安装的uv，同时继续下一条（即5.4）
    4.若因4.5导致跳转的，执行download.py以安装项目所需模型，
    5.若因4.6导致跳转的，视平台执行install.sh或install.ps1
6.若被跳转到此步，则说明环境不存在问题，开始运行，按照如下步骤进行处理：
    1.uv sync
    2.uv run api.py
    3.cd GPT_SoVITS & uv run api_v2.py
    4.uv run pet.py
  以下是一些提示：
    1.对于sync命令，应当阻塞进程，直到执行完毕且无报错再运行下面的三条命令，若有报错需直接打印在控制台并结束进程（sync指令每次都需要运行，避免由于更新导致的依赖变化）
    2.这三个文件均为服务端，有日志输出（也意味着如果你直接使用&连接3条命令会被第一条阻塞），你应该使用类似于管道的技术将它们的日志分别保存到3个文件中，最好在项目根目录下新建一个log文件夹，其中分别建3个子文件夹来存储3个服务端的日志，每次启动时将日志存放到一个新建的.log文件中，文件以启动时的日期+时间命名（时间需精确到秒）
    3.这三个服务端的路径需要注意，你可以自行查看并处理（其中api_v2.py必须cd到GPT_SoVITS文件夹下才能运行，否则会报错


